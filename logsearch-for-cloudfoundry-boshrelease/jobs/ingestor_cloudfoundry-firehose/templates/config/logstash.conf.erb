input {
	tcp {
		add_field => [ "type", "syslog" ]
		host => "127.0.0.1"
		port => "514"
	}
}

<% if 'DEBUG' == p('logstash.metadata_level') %>
	filter {
	    mutate {
	        rename => [ "host", "@ingestor.remote_host" ]

			add_field => [ "@ingestor[service]", "syslog" ]
			add_field => [ "@ingestor[job]", "<%= name %>/<%= index %>" ]
	    }

		ruby {
			code => "event['@ingestor[timestamp]'] = Time.now.iso8601(3)"
		}
	}
<% end %>

output {
	<% if p("ingestor_cloudfoundry-firehose.debug") %>
        stdout {
            codec => "json"
        }
	<% end %>
	
	<% if_p("redis.host") do |redis_host| %>
	redis {
		host => "<%= p("redis.host") %>"
		port => "<%= p("redis.port") %>"
		data_type => "list"
		key => "<%= p("redis.key") %>"
		batch => true
		batch_events => 50
	}
	<% end %>

	<% if_p("rabbitmq.host") do |rabbitmq_host| %>
	rabbitmq {
		host => "<%= p("rabbitmq.host") %>"
		exchange => "<%= p("rabbitmq.exchange") %>"
		exchange_type => "<%= p("rabbitmq.exchange_type") %>"
		user => "<%= p("rabbitmq.user") %>"
		password => "<%= p("rabbitmq.password") %>"
	}
	<% end %>

	<% an_output = p(['redis.host', 'rabbitmq.host'], nil) %>
	<% raise "There are no output configured" if an_output.nil? %>
}
