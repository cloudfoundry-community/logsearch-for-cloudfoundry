releases:
- (( merge ))
- name: logsearch-for-cloudfoundry
  version: latest

jobs:
- name: ingestor
  templates:
  - (( merge ))
  - {name: ingestor_cloudfoundry-firehose, release: logsearch-for-cloudfoundry}

- name: parser
  templates:
  - (( merge ))
  - {name: parser-config-lfc, release: logsearch-for-cloudfoundry}
  properties:
    logstash_parser:
      debug: false
      elasticsearch:
        index: "logs-%{[@metadata][index]}-%{+YYYY.MM.dd}"
        index_type: "%{@type}"
      filters:
      - logsearch-for-cf: /var/vcap/packages/logsearch-config-logstash-filters/logstash-filters-default.conf
      deployment_dictionary: /var/vcap/jobs/parser-config-lfc/config/deployment_lookup.yml
      deployment_name:
        cf: my_cf
        diego: my_cf-diego

- name: maintenance
  templates:
  - (( merge ))
  - {name: elasticsearch-config-lfc, release: logsearch-for-cloudfoundry}
  properties:
    elasticsearch_config:
      templates:
        - shards-and-replicas: /var/vcap/jobs/elasticsearch_config/index-templates/shards-and-replicas.json
        - index-settings: /var/vcap/jobs/elasticsearch_config/index-templates/index-settings.json
        - index-mappings: /var/vcap/jobs/elasticsearch_config/index-templates/index-mappings.json
        - index-mappings-lfc: /var/vcap/jobs/elasticsearch-config-lfc/index-mappings.json
        - index-mappings-app-lfc: /var/vcap/jobs/elasticsearch-config-lfc/index-mappings-app.json
        - index-mappings-platform-lfc: /var/vcap/jobs/elasticsearch-config-lfc/index-mappings-platform.json

- name: cf-kibana
  templates:
  - { release: logsearch-for-cloudfoundry, name: cf-kibana }
  lifecycle: errand
  instances: 1
  resource_pool: errand
  networks:
  - name: default

- name: smoke-tests
  templates:
  - (( replace ))
  - { release: logsearch-for-cloudfoundry, name: smoke-tests }
  lifecycle: errand
  instances: 1
  release: logsearch-for-cloudfoundry
  resource_pool: errand
  networks:
  - name: default

- name: upload-kibana-objects
  lifecycle: errand
  release: logsearch-for-cloudfoundry
  instances: 1
  templates:
  - {name: upload-kibana-objects, release: logsearch-for-cloudfoundry}
  networks:
  - name: default
  resource_pool: errand
  properties:
    elasticsearch:
      host: (( grab jobs.elasticsearch_master.networks.default.static_ips.[0] ))
      port: 9200
    cloudfoundry:
      firehose_events: (( grab properties.cloudfoundry.firehose_events ))  
    kibana_objects:
      upload_predefined_kibana_objects: true 
      upload_data_files: []  

properties:
  cloudfoundry:
    firehose_events: LogMessage    
  cf-kibana:
    oauth2_client_secret: oauth2_client_secret
    cloudfoundry:
      system_domain: example.com
      admin_user.name: admin
      admin_user.password: admin-password
      apps_domain: example.com
      api_security_group: a-group
    elasticsearch:
      host: (( grab jobs.elasticsearch_master.networks.default.static_ips.[0] ))
  elasticsearch_config:
      index_prefix: "logs-"  # Name prefix of your log indices that you use in `logstash_parser.elasticsearch.index` property set for your parser.
      app_index_prefix: "logs-app"  # Name prefix of your `app` log indices. If you don't split `app` and `platform` indices, then just set it with the value of `elasticsearch_config.index_prefix`.
      platform_index_prefix: "logs-platform"  # Name prefix of your `platform` log indices. If you don't split `app` and `platform` indices, then just set it with the value of `elasticsearch_config.index_prefix`.
  syslog:
    host: (( grab jobs.ingestor.networks.[0].static_ips.[0] ))
    port: 5514
