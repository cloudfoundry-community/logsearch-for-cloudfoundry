##------------------------------
## Parses LogMessage RTR events.|
##------------------------------

if ( [@type] == "LogMessage" and [@source][type] == "RTR" ) {

    mutate {
      add_tag => [ "logmessage-rtr" ]
    }

    grok {
      match => [ "@message", "%{HOSTNAME:[rtr][hostname]} - \[(?<rtr_time>%{MONTHDAY}/%{MONTHNUM}/%{YEAR}:%{TIME} %{INT})\] \"%{WORD:[rtr][verb]} %{URIPATHPARAM:[rtr][path]} %{PROG:[rtr][http_spec]}\" %{BASE10NUM:[rtr][status]:int} %{BASE10NUM:[rtr][request_bytes_received]:int} %{BASE10NUM:[rtr][body_bytes_sent]:int} \"%{GREEDYDATA:[rtr][referer]}\" \"%{GREEDYDATA:[rtr][http_user_agent]}\" %{HOSTPORT} x_forwarded_for:\"%{GREEDYDATA:[rtr][x_forwarded_for]}\" x_forwarded_proto:\"%{GREEDYDATA:[rtr][x_forwarded_proto]}\" vcap_request_id:\"%{NOTSPACE:[rtr][vcap_request_id]}\" response_time:%{NUMBER:[rtr][response_time_sec]:float} app_id:%{NOTSPACE}%{GREEDYDATA}" ]

      # cf-release v250+
      match => [ "@message", "%{HOSTNAME:[rtr][hostname]} - \[(?<rtr_time>%{MONTHDAY}/%{MONTHNUM}/%{YEAR}:%{TIME} %{INT})\] \"%{WORD:[rtr][verb]} %{URIPATHPARAM:[rtr][path]} %{PROG:[rtr][http_spec]}\" %{BASE10NUM:[rtr][status]:int} %{BASE10NUM:[rtr][request_bytes_received]:int} %{BASE10NUM:[rtr][body_bytes_sent]:int} \"%{GREEDYDATA:[rtr][referer]}\" \"%{GREEDYDATA:[rtr][http_user_agent]}\" \"(%{HOSTPORT}|-)\" \"(%{HOSTPORT}|-)\" x_forwarded_for:\"%{GREEDYDATA:[rtr][x_forwarded_for]}\" x_forwarded_proto:\"%{GREEDYDATA:[rtr][x_forwarded_proto]}\" vcap_request_id:\"%{NOTSPACE:[rtr][vcap_request_id]}\" response_time:%{NUMBER:[rtr][response_time_sec]:float} app_id:%{NOTSPACE}%{GREEDYDATA}" ]

      # cf-release v252+
      match => [ "@message", "%{HOSTNAME:[rtr][hostname]} - \[(?<rtr_time>%{YEAR}-%{MONTHNUM}-%{MONTHDAY}T%{TIME}+%{INT})\] \"%{WORD:[rtr][verb]} %{URIPATHPARAM:[rtr][path]} %{PROG:[rtr][http_spec]}\" %{BASE10NUM:[rtr][status]:int} %{BASE10NUM:[rtr][request_bytes_received]:int} %{BASE10NUM:[rtr][body_bytes_sent]:int} \"%{GREEDYDATA:[rtr][referer]}\" \"%{GREEDYDATA:[rtr][http_user_agent]}\" \"(%{IPORHOST:[rtr][src][host]}:%{POSINT:[rtr][src][port]:int}|-)\" \"%{IPORHOST:[rtr][dst][host]}:%{POSINT:[rtr][dst][port]:int}\" x_forwarded_for:\"%{GREEDYDATA:[rtr][x_forwarded_for]}\" x_forwarded_proto:\"%{GREEDYDATA:[rtr][x_forwarded_proto]}\" vcap_request_id:\"%{NOTSPACE:[rtr][vcap_request_id]}\" response_time:%{NUMBER:[rtr][response_time_sec]:float} app_id:\"%{NOTSPACE:[rtr][app][id]}\" app_index:\"(%{BASE10NUM:[rtr][app][index]:int}|-)\""]

      # cf-deployment v12.17.0+
      match => [ "@message", "%{HOSTNAME:[rtr][hostname]} - \[(?<rtr_time>%{YEAR}-%{MONTHNUM}-%{MONTHDAY}T%{TIME}+%{INT})\] \"%{WORD:[rtr][verb]} %{URIPATHPARAM:[rtr][path]} %{PROG:[rtr][http_spec]}\" %{BASE10NUM:[rtr][status]:int} %{BASE10NUM:[rtr][request_bytes_received]:int} %{BASE10NUM:[rtr][body_bytes_sent]:int} \"%{GREEDYDATA:[rtr][referer]}\" \"%{GREEDYDATA:[rtr][http_user_agent]}\" \"(%{IPORHOST:[rtr][src][host]}:%{POSINT:[rtr][src][port]:int}|-)\" \"%{IPORHOST:[rtr][dst][host]}:%{POSINT:[rtr][dst][port]:int}\" x_forwarded_for:\"%{GREEDYDATA:[rtr][x_forwarded_for]}\" x_forwarded_proto:\"%{GREEDYDATA:[rtr][x_forwarded_proto]}\" vcap_request_id:\"%{NOTSPACE:[rtr][vcap_request_id]}\" response_time:%{NUMBER:[rtr][response_time_sec]:float} gorouter_time:%{NUMBER:[rtr][gorouter_time_sec]:float} app_time:%{NUMBER:[rtr][app_time_sec]:float} app_id:\"%{NOTSPACE:[rtr][app][id]}\" app_index:\"(%{BASE10NUM:[rtr][app][index]:int}|-)\""]

      # cf-deployment v12.27.0+
      match => [ "@message", "%{HOSTNAME:[rtr][hostname]} - \[(?<rtr_time>%{TIMESTAMP_ISO8601})\] \"%{WORD:[rtr][verb]} %{URIPATHPARAM:[rtr][path]} %{PROG:[rtr][http_spec]}\" %{BASE10NUM:[rtr][status]:int} %{BASE10NUM:[rtr][request_bytes_received]:int} %{BASE10NUM:[rtr][body_bytes_sent]:int} \"%{GREEDYDATA:[rtr][referer]}\" \"%{GREEDYDATA:[rtr][http_user_agent]}\" \"(%{IPORHOST:[rtr][src][host]}:%{POSINT:[rtr][src][port]:int}|-)\" \"%{IPORHOST:[rtr][dst][host]}:%{POSINT:[rtr][dst][port]:int}\" x_forwarded_for:\"%{GREEDYDATA:[rtr][x_forwarded_for]}\" x_forwarded_proto:\"%{GREEDYDATA:[rtr][x_forwarded_proto]}\" vcap_request_id:\"%{NOTSPACE:[rtr][vcap_request_id]}\" response_time:%{NUMBER:[rtr][response_time_sec]:float} gorouter_time:%{NUMBER:[rtr][gorouter_time_sec]:float} app_id:\"%{NOTSPACE:[rtr][app][id]}\" app_index:\"(%{BASE10NUM:[rtr][app][index]:int}|-)\"( %{GREEDYDATA:kvpairs})?"]

      tag_on_failure => [ "fail/cloudfoundry/app-rtr/grok" ]
    }

    if !("fail/cloudfoundry/app-rtr/grok" in [tags]) {

        # Set [rtr][timestamp]
        mutate {
          rename => { "rtr_time" => "[rtr][timestamp]" }
        }

        # Set [rtr][x_forwarded_for]
        mutate {
            gsub => ["[rtr][x_forwarded_for]","[\s\"]",""] # remove quotes and whitespace
            split => ["[rtr][x_forwarded_for]", ","] # format is client, proxy1, proxy2 ...
        }

        # Set [rtr][remote_addr]
        mutate {
          add_field => ["[rtr][remote_addr]", "%{[rtr][x_forwarded_for][0]}"]
        }
        if [rtr][remote_addr] =~ /([0-9]{1,3}\.){3}[0-9]{1,3}/ {
            geoip {
              source => "[rtr][remote_addr]"
            }
        }

        # Set [rtr][response_time_ms]
        mutate {
          add_field => { "[rtr][response_time_ms]" => "%{[rtr][response_time_sec]}000" }
        }
        mutate {
          gsub => ["[rtr][response_time_ms]", "\.(\d)(\d)(\d)([\d]{0,3}).*","\1\2\3.\4"]
        }
        mutate {
          convert => { "[rtr][response_time_ms]" => "float" }
        }

        # Set [rtr][gorouter_time_ms]
        if [rtr][gorouter_time_sec] =~ /.+/ {
          mutate {
            add_field => { "[rtr][gorouter_time_ms]" => "%{[rtr][gorouter_time_sec]}000" }
          }
          mutate {
            gsub => ["[rtr][gorouter_time_ms]", "\.(\d)(\d)(\d)([\d]{0,3}).*","\1\2\3.\4"]
          }
          mutate {
            convert => { "[rtr][gorouter_time_ms]" => "float" }
          }
        }

        # Process extra headers based on the following 2 properties available in CF-Deployment
        #   https://bosh.io/jobs/gorouter?source=github.com/cloudfoundry/routing-release&version=0.198.0#p%3drouter.extra_headers_to_log
        #   https://bosh.io/jobs/gorouter?source=github.com/cloudfoundry/routing-release&version=0.198.0#p%3drouter.tracing.enable_zipkin
        if [kvpairs] =~ /.+/ {
          kv {
            source => "kvpairs"
            remove_field => [ "kvpairs" ]
            include_brackets => false
            value_split => ":"
            target => "[rtr][extra]"
            tag_on_failure => "fail/cloudfoundry/app-rtr/kv"
          }
        }

        # Set @message
        mutate {
          replace => {"@message" => "%{[rtr][status]} %{[rtr][verb]} %{[rtr][path]} (%{[rtr][response_time_ms]} ms)"}
        }

        # Set @level (based on HTTP status)
        if [rtr][status] >= 500 {
            mutate {
              replace => { "@level" => "ERROR" }
            }
        } else if [rtr][status] >= 400 {
            mutate {
              replace => { "@level" => "WARN" }
            }
        } else {
            mutate {
              replace => { "@level" => "INFO" }
            }
        }
    }

}
