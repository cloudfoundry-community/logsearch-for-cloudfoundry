##----------------------------------
# Haproxy conf. Parses haproxy logs.|
##----------------------------------
if [@source][component] == "haproxy" {

    mutate {
      replace => { "@type" => "haproxy" }
      add_tag => "haproxy"
    }

    # Grok patterns are based on http://www.haproxy.org/download/1.7/doc/configuration.txt
    # Two formats are used accordingly:
    # 8.2.3. HTTP log format
    # 8.2.5. Error log format

    grok {
      match => [ "@message", "%{IP:[haproxy][client_ip]}:%{INT:[haproxy][client_port]:int} \[%{DATA:[haproxy][accept_date]}\] %{NOTSPACE:[haproxy][frontend_name]} %{NOTSPACE:[haproxy][backend_name]}/%{NOTSPACE:[haproxy][server_name]} %{INT:[haproxy][time_request]:int}/%{INT:[haproxy][time_queue]:int}/%{INT:[haproxy][time_backend_connect]:int}/%{INT:[haproxy][time_backend_response]:int}/%{INT:[haproxy][time_duration]:int} %{INT:[haproxy][http_status_code]:int} %{NOTSPACE:[haproxy][bytes_read]:int} %{DATA:[haproxy][captured_request_cookie]} %{DATA:[haproxy][captured_response_cookie]} %{NOTSPACE:[haproxy][termination_state]} %{INT:[haproxy][actconn]:int}/%{INT:[haproxy][feconn]:int}/%{INT:[haproxy][beconn]:int}/%{INT:[haproxy][srvconn]:int}/%{NOTSPACE:[haproxy][retries]:int} %{INT:[haproxy][srv_queue]:int}/%{INT:[haproxy][backend_queue]:int} (\{%{DATA:[haproxy][captured_request_headers]}\})?( )?(\{%{DATA:[haproxy][captured_response_headers]}\})?( )?\"(?<message>(?<haproxy_http_request>(<BADREQ>|((%{WORD:[haproxy][http_request_verb]})?( %{GREEDYDATA})?))))\"" ]
      match => [ "@message", "%{IP:[haproxy][client_ip]}:%{INT:[haproxy][client_port]:int} \[%{DATA:[haproxy][accept_date]}\] %{NOTSPACE:[haproxy][frontend_name]}/%{NOTSPACE:[haproxy][bind_name]}:%{SPACE}%{GREEDYDATA:message}" ]
      tag_on_failure => "fail/cloudfoundry/platform-haproxy/grok"
    }

    if !("fail/cloudfoundry/platform-haproxy/grok" in [tags]) {

        if [haproxy_http_request] {
            mutate {
              rename => {"haproxy_http_request" => "[haproxy][http_request]"}
            }
        }

        mutate {
          rename => {"message" => "@message"} # @message
        }

        # @level
        if [haproxy][http_status_code] {
            if [haproxy][http_status_code] >= 400 {
                mutate {
                  add_field => { "@level" => "ERROR" }
                }
            } else {
                mutate {
                  add_field => { "@level" => "INFO" }
                }
            }
        }
    }
}
