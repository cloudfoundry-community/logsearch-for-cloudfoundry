#!/usr/bin/env python3

<%
  system_domain = nil
  if_p('cloudfoundry.system_domain') do |prop|
    system_domain = prop
  end.else do
    system_domain = link('cloud_controller').p('system_domain')
  end
%>

import glob
import logging
import os
import requests

logging.basicConfig(level=logging.INFO)

if __name__ == "__main__":
    session = requests.Session()

    logs = session.get('https://logs.<%= system_domain %>')
    assert logs.url == 'https://login.<%= system_domain %>/login'
    assert logs.status_code == 200

    login = session.post(
        'https://login.<%= system_domain %>/login.do',
        data={
            'username': '<%= p('cloudfoundry.user') %>',
            'password': '<%= p('cloudfoundry.password') %>',
            'X-Uaa-Csrf': logs.cookies['X-Uaa-Csrf'],
        },
    )
    assert login.url == 'https://logs.<%= system_domain %>/'
    assert login.status_code == 200

    for filename in glob.iglob('/var/vcap/jobs/upload-kibana-objects/kibana-objects/**/*.json', recursive=True):
        headers = {'content-type': 'application/json', 'kbn-xsrf': 'true'}
        r = session.post(
                'https://logs.<%= system_domain %>/api/saved_objects/{}/{}'.format(os.path.basename(os.path.dirname(filename)), os.path.basename(os.path.splitext(filename)[0])),
                data=open(filename, 'rb'),
                headers=headers
        )
        if r.status_code == 409:
            put = session.put(
                    'https://logs.<%= system_domain %>/api/saved_objects/{}/{}'.format(os.path.basename(os.path.dirname(filename)), os.path.basename(os.path.splitext(filename)[0])),
                    data=open(filename, 'rb'),
                    headers=headers
            )
            if put.status_code == 200:
                logging.info('Object %s Uploaded Successfully', filename)
            else:
                logging.info('Object %s Failed to Upload', filename)
        elif r.status_code == 200:
            logging.info('Object %s Uploaded Successfully', filename)
        else:
            logging.info('Object %s Failed to Upload', filename)

    r = session.post(
      'https://logs.<%= system_domain %>/api/kibana/settings',
      data='{"changes":{"defaultIndex":"<%= p('kibana_objects.default_index') %>"}}',
      headers=headers
    )
    if r.status_code == 200:
        logging.info('Successfully Set <%= p('kibana_objects.default_index') %> as Default Index')
    else:
        logging.info('Failed to Set <%= p('kibana_objects.default_index') %> as Default Index')

