#!/bin/bash

set -e # exit immediately if a simple command exits with a non-zero status
set -u # report the usage of uninitialized variables

# Setup env vars and folders for the webapp_ctl script
source /var/vcap/jobs/ingestor_cloudfoundry-firehose/helpers/ctl_setup.sh 'ingestor_cloudfoundry-firehose'

export LANG=en_US.UTF-8

<%
  syslog_port = nil
  if_link("ingestor") { |ingestor_link| syslog_port = ingestor_link.p("logstash_ingestor.syslog.port") }
  unless syslog_port
    syslog_port = p("syslog.port")
  end

  api_endpoint = nil
  if_p('cloudfoundry.api_endpoint') do |prop|
    api_endpoint = prop
  end.else do
    api_endpoint = "https://api." + link('cloud_controller').p('system_domain').to_s
  end
%>

case $1 in

  start)
    echo "Starting CF firehose-to-syslog ingestor..."

    echo "Waiting 2m for syslog ingestor to accept connections..."
    wait_for_service_on_port <%= p("syslog.host") %> <%= syslog_port %>

    pid_guard $PIDFILE $JOB_NAME

    # store pid in $PIDFILE
    echo $$ > $PIDFILE

    exec chpst -u vcap:vcap firehose-to-syslog \
        --api-endpoint=<%= api_endpoint %> \
        <% if_p("cloudfoundry.doppler_endpoint") do |endpoint| %>--doppler-endpoint=<%= endpoint %><% end %> \
        <% if properties.syslog.cert_pem %>--cert-pem-syslog=${JOB_DIR}/config/cert.pem<% end %> \
        <% if p("cloudfoundry.skip_ssl_validation") %>--skip-ssl-validation <% end %> \
        --client-id=<%= p("cloudfoundry.firehose_client_id") %> \
        --client-secret=<%= p("cloudfoundry.firehose_client_secret") %> \
        --syslog-protocol=<%= p("syslog.protocol") %>\
        --syslog-server=<%= p("syslog.host") %>:<%= syslog_port %>\
        --events=<%= p('cloudfoundry.firehose_events').join(',') %> \
        <% if_p("cloudfoundry.extra_fields") do |fields| %> --extra-fields="<%= fields.map { |key, value| "#{key}:#{value}" }.join(',') %>" <% end %> \
        <% if p("cloudfoundry.ignore_missing_apps") %>--ignore-missing-apps  <% end %> \
        <% if p("ingestor_cloudfoundry-firehose.enable_stats_server") %>--enable-stats-server  <% end %> \
        --subscription-id=<%= p("cloudfoundry.firehose_subscription_id") %> \
        --boltdb-path=$TMP_DIR/firehose-to-syslog.cache.db \
        --logs-buffer-size=<%= p("cloudfoundry.logs_buffer_size") %> \
        --min-retry-delay=<%= p("cloudfoundry.min_retry_delay") %> \
        --max-retry-delay=<%= p("cloudfoundry.max_retry_delay") %> \
        --max-retry-count=<%= p("cloudfoundry.max_retry_count") %> \
        --strip-app-name-suffixes=<%= p("cloudfoundry.firehose_app_name_suffixes_to_strip").join(',') %> \
        --cc-rps=<%= p("cloudfoundry.cc_polling_request") %> \
        --cc-pull-time=<%= p("cloudfoundry.firehose_cc_pull_interval") %> \<% if p("ingestor_cloudfoundry-firehose.debug") %>
        --debug \<% end%>
         >>$LOG_DIR/$JOB_NAME.stdout.log \
         2>>$LOG_DIR/$JOB_NAME.stderr.log

    ;;

  stop)
    kill_and_wait $PIDFILE

    ;;
  *)
    echo "Usage: ingestor_cloudfoundry-firehose_ctl {start|stop}"

    ;;

esac
exit 0
