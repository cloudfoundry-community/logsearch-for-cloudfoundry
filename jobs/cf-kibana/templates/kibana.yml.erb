# Kibana is served by a back end server. This setting specifies the port to use.
# server.port: 5601

# This setting specifies the IP address of the back end server.
server.host: "0.0.0.0"

# Enables you to specify a path to mount Kibana at if you are running behind a proxy. This setting
# cannot end in a slash.
# server.basePath: ""

# The maximum payload size in bytes for incoming server requests.
# server.maxPayloadBytes: 1048576

# The URL of the Elasticsearch instance to use for all your queries.
<%
  elasticsearch_host = nil
  if_p('cf-kibana.elasticsearch.host') do |prop|
    elasticsearch_host = prop
  end.else do
    elasticsearch_host = link('elasticsearch').instances.first.address
  end

  elasticsearch_port = nil
  if_p('cf-kibana.elasticsearch.port') do |prop|
    elasticsearch_port = prop
  end.else do
    elasticsearch_port = link('elasticsearch').p("elasticsearch.port")
  end
%>
elasticsearch.url: "http://<%= elasticsearch_host + ':' + elasticsearch_port.to_s %>"

# When this setting’s value is true Kibana uses the hostname specified in the server.host
# setting. When the value of this setting is false, Kibana uses the hostname of the host
# that connects to this Kibana instance.
elasticsearch.preserveHost: true

# Kibana uses an index in Elasticsearch to store saved searches, visualizations and
# dashboards. Kibana creates a new index if the index doesn’t already exist.
# kibana.index: ".kibana"
kibana.index: "<%= p('cf-kibana.kibana_index') %>"

# The default application to load.
# kibana.defaultAppId: "discover"
kibana.defaultAppId: "<%= p('cf-kibana.default_app_id') %>"

# If your Elasticsearch is protected with basic authentication, these settings provide
# the username and password that the Kibana server uses to perform maintenance on the Kibana
# index at startup. Your Kibana users still need to authenticate with Elasticsearch, which
# is proxied through the Kibana server.
# elasticsearch.username: "user"
# elasticsearch.password: "pass"

# Paths to the PEM-format SSL certificate and SSL key files, respectively. These
# files enable SSL for outgoing requests from the Kibana server to the browser.
# server.ssl.cert: /path/to/your/server.crt
# server.ssl.key: /path/to/your/server.key

# Optional settings that provide the paths to the PEM-format SSL certificate and key files.
# These files validate that your Elasticsearch backend uses the same key files.
# elasticsearch.ssl.cert: /path/to/your/client.crt
# elasticsearch.ssl.key: /path/to/your/client.key

# Optional setting that enables you to specify a path to the PEM file for the certificate
# authority for your Elasticsearch instance.
# elasticsearch.ssl.ca: /path/to/your/CA.pem

# To disregard the validity of SSL certificates, change this setting’s value to false.
# elasticsearch.ssl.verify: true

# Time in milliseconds to wait for Elasticsearch to respond to pings. Defaults to the value of
# the elasticsearch.requestTimeout setting.
# elasticsearch.pingTimeout: 1500

# Time in milliseconds to wait for responses from the back end or Elasticsearch. This value
# must be a positive integer.
# elasticsearch.requestTimeout: 300000
elasticsearch.requestTimeout: <%= p('cf-kibana.request_timeout') %>

# Time in milliseconds for Elasticsearch to wait for responses from shards. Set to 0 to disable.
# elasticsearch.shardTimeout: 0
elasticsearch.shardTimeout: <%= p('cf-kibana.shard_timeout') %>

# Time in milliseconds to wait for Elasticsearch at Kibana startup before retrying.
# elasticsearch.startupTimeout: 5000

# Specifies the path where Kibana creates the process ID file.
# pid.file: /var/run/kibana.pid

# Enables you specify a file where Kibana stores log output.
# logging.dest: stdout

# Set the value of this setting to true to suppress all logging output.
# logging.silent: false

# Set the value of this setting to true to suppress all logging output other than error messages.
logging.quiet: <%= p("cf-kibana.logging_quiet") %>

# Set the value of this setting to true to log all events, including system usage information
# and all requests.
# logging.verbose: true

# Configure development console
console.enabled: <%= p("cf-kibana.console_enabled") %>

<% if_p('cf-kibana.config_options') do p("cf-kibana.config_options", {}).each do | k, v | %>
<%= k %>: <%= v %><% end %>
<% end %>
